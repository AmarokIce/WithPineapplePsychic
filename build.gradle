buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = "https://jcenter.bintray.com/"
        }
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

version = "${project.modVersion}"
group = "${project.modGroupId}"
archivesBaseName = "${project.modArchivesName}"

configurations {
    includeCompile
    implementation.extendsFrom includeCompile
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "minecraft"
}

repositories {
    mavenLocal()
    mavenCentral()

    flatDir {
        dirs 'libs'
    }

    maven {
        name "Amarok Maven"
        url "http://maven.snowlyicewolf.club/"
        allowInsecureProtocol = true
    }

    maven {
        name "Curse Maven"
        url "https://cursemaven.com"
    }

    maven {
        name "Modrinth Maven"
        url "https://api.modrinth.com/maven"
    }
}

dependencies {
    includeCompile 'club.someoneice.json:amarok-json-for-java:1.4.4'
    includeCompile 'com.google.code.gson:gson:2.11.0'

    implementation "club.someoneice.togocup.pineapple_tag:pineapple-tag:1.5"

    if (debugWithM3.toBoolean()) {
        runtimeOnly "maven.modrinth:notenoughitems-unofficial:2.5.17-GTNH"
        runtimeOnly "maven.modrinth:codechickencore-unofficial:1.2.1"
        runtimeOnly "maven.modrinth:codechickenlib-unofficial:1.2.1"

        runtimeOnly "curse.maven:Muya-530214:4364097"
        runtimeOnly "curse.maven:ManaMetalMod-531708:5099147"
        runtimeOnly "curse.maven:Trt-967327:5150809"
    }
}

processResources {
    inputs.property "modversion", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "moddescription", project.modDescription
    inputs.property "modname", project.modName
    inputs.property "modid", project.modId

    inputs.property "url", project.url

    filesMatching("mcmod.info") {
        expand  'modversion': project.version,
                'mcversion': project.minecraft.version,
                'moddescription': project.modDescription,
                'modname': project.modName,
                'modid': project.modId,
                'url': project.url
    }
}

jar {
    from {
        configurations.includeCompile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


sourceCompatibility = targetCompatibility = "1.8"

tasks.withType(Jar).configureEach {
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:all"
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:all"
            }
        }
    }
}

publishing {
    repositories {
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}